WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT = _{ "//" ~ (!"\n" ~ ANY)* ~ "\n" | "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

program = _{ SOI ~ statement* ~ EOI }

statement = {
    trace_stmt |
    print_stmt |
    backtrace_stmt |
    if_stmt |
    expr_stmt |
    var_decl_stmt
}

trace_stmt = { "trace" ~ trace_pattern ~ "{" ~ statement* ~ "}" }
trace_pattern = { 
    hex_address |
    wildcard_pattern |
    source_line |
    function_name
}

hex_address = @{ "0x" ~ ASCII_HEX_DIGIT+ }
wildcard_pattern = @{ identifier ~ "*" }
source_line = { file_path ~ ":" ~ line_number }
function_name = { identifier }

file_path = @{ (ASCII_ALPHANUMERIC | "_" | "/" | "." | "-")+ }
line_number = @{ ASCII_DIGIT+ }

print_stmt = { "print" ~ print_content ~ ";" }
print_content = {
    string |           // print "hello world"
    identifier |       // print variable_name
    format_expr        // print "format {} {}" arg1, arg2 (future)
}
format_expr = { string ~ expr ~ ("," ~ expr)* }
backtrace_stmt = { ("backtrace" | "bt") ~ ";" }
expr_stmt = { expr ~ ";" }
var_decl_stmt = { "let" ~ identifier ~ "=" ~ expr ~ ";" }

// Conditional statements (Rust style)
if_stmt = { "if" ~ condition ~ "{" ~ statement* ~ "}" ~ else_clause? }
else_clause = { "else" ~ ( if_stmt | ("{" ~ statement* ~ "}") ) }

// Condition for if statements
condition = { expr ~ compare_op ~ expr }
compare_op = { "==" | "!=" | "<=" | ">=" | "<" | ">" }

// Expression system
expr = { term ~ (add_op ~ term)* }
term = { factor ~ (mul_op ~ factor)* }
factor = {
    string |
    float |
    int |
    special_var |
    member_access |
    pointer_deref |
    identifier |
    "(" ~ expr ~ ")"
}

special_var = @{ "$" ~ (ASCII_ALPHANUMERIC | "_")+ }

member_access = { identifier ~ ("." ~ identifier)+ }
pointer_deref = { "*" ~ identifier }

add_op = { "+" | "-" }
mul_op = { "*" | "/" }

identifier = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
int = @{ ASCII_DIGIT+ }
float = @{ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }
string = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" } 